name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:  
  build_exe:
    outputs:
      upload_id: ${{ steps.draft_release.outputs.id }}
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # Change this to npm, yarn or pnpm.
      - name: build exe
        run: pnpm tauri build
        
      - name: Create Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: releasename5
          release_name: releasename5
          draft: true
          prerelease: false

      - name: Upload exe
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/release/app.exe
          asset_name: calcul.exe
          asset_content_type: application/vnd.microsoft.portable-executable
  build_html:
    needs: [build_exe]
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
  
    - name: Install dependencies (ubuntu only)
      run: sudo apt-get update

    - name: Install pnpm
      run: npm i -g pnpm

    - name: Sync node version and setup cache
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'
        cache: 'pnpm' # Set this to npm, yarn or pnpm.
    
    - name: Install frontend dependencies
      # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
      run: pnpm install # Change this to npm, yarn or pnpm.

    - name: Build the app
      run: pnpm build

    - name: Upload html
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_exe.outputs.upload_url }}
        asset_path: ./dist/index.html
        asset_name: calcul.html
        asset_content_type: text/html
        
  publish-release:
    needs: [build_html, build_exe]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.build_exe.outputs.upload_id }}