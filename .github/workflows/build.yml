name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-html:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
  
    - name: Install dependencies (ubuntu only)
      run: sudo apt-get update

    - name: Install pnpm
      run: npm i -g pnpm

    - name: Sync node version and setup cache
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'
        cache: 'pnpm' # Set this to npm, yarn or pnpm.
    
    - name: Install frontend dependencies
      # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
      run: pnpm install # Change this to npm, yarn or pnpm.

    - name: Build the app
      run: pnpm build

  release:
    needs: [build-html]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: add file to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/index.html
          asset_name: calcul.html
          asset_content_type: text/html

      - name: Publish Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*
          asset_name: myapp-${{ matrix.platform }}-${{ matrix.build_type }}
          asset_content_type: application/octet-stream